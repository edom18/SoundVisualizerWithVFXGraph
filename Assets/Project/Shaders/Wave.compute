#pragma kernel Update

Texture2D<float4> _WaveBufferRead;
RWTexture2D<float4> _WaveBufferWrite;

float _DeltaUV;
half _S2;
half _Atten;

float _Power;

SamplerState _LinearClamp;

[numthreads(8,8,1)]
void Update(uint2 id : SV_DispatchThreadID)
{
    float w, h;
    _WaveBufferRead.GetDimensions(w, h);
    
    float3 px = float3(1.0/w, 1.0/h, 0.0);
    float2 uv = float2(id.x / w, id.y / h) + px.xy * 0.5;
    float3 duv = px * _DeltaUV;

    float2 center = uv * 2.0 - 1.0;
    float len = length(center);
    
    float power = (1.0 - smoothstep(0.0, 0.1, len)) * _Power;

    float4 c = _WaveBufferRead.SampleLevel(_LinearClamp, uv, 0);
    float p = (2.0 * c.r - c.g + _S2 * (
        _WaveBufferRead.SampleLevel(_LinearClamp, uv - duv.zy, 0).r +
        _WaveBufferRead.SampleLevel(_LinearClamp, uv + duv.zy, 0).r +
        _WaveBufferRead.SampleLevel(_LinearClamp, uv - duv.xz, 0).r +
        _WaveBufferRead.SampleLevel(_LinearClamp, uv + duv.xz, 0).r - 4.0 * c.r)) * _Atten;

    _WaveBufferWrite[id] = float4(p + power, c.r, 0, 1);
}
